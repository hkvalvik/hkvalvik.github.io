(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

module.exports = { "repositories": [{ "_args": [["fontset", "/Users/administrator/Desktop/projects/hkvalvik"]], "_from": "fontset@*", "_id": "fontset@0.2.1", "_inCache": true, "_installable": true, "_location": "/fontset", "_nodeVersion": "5.5.0", "_npmOperationalInternal": { "host": "packages-12-west.internal.npmjs.com", "tmp": "tmp/fontset-0.2.1.tgz_1469536562070_0.8157257502898574" }, "_npmUser": { "email": "hkvalvik@gmail.com", "name": "hkvalvik" }, "_npmVersion": "3.3.12", "_phantomChildren": {}, "_requested": { "name": "fontset", "raw": "fontset", "rawSpec": "", "scope": null, "spec": "*", "type": "range" }, "_requiredBy": ["#DEV:/"], "_shasum": "cccce2377ec95ce7edf5a2dba71063746c05995d", "_shrinkwrap": null, "_spec": "fontset", "_where": "/Users/administrator/Desktop/projects/hkvalvik", "author": "", "bugs": { "url": "https://github.com/hkvalvik/fontset/issues" }, "dependencies": {}, "description": "Configurable, responsive typography sets. Just add HTML!", "devDependencies": { "autoprefixer": "^6.3.6", "babel-core": "^6.9.0", "babel-preset-es2015": "^6.9.0", "babelify": "^7.3.0", "browserify": "^13.0.1", "gulp": "^3.9.1", "gulp-compile-handlebars": "^0.6.1", "gulp-concat": "^2.6.0", "gulp-connect": "^4.0.0", "gulp-insert": "^0.5.0", "gulp-postcss": "^6.1.1", "gulp-rename": "^1.2.2", "gulp-sass": "^2.2.0", "gulp-sourcemaps": "^1.6.0", "gulp-util": "^3.0.7", "highlight.js": "^9.3.0", "normalize-scss": "^4.2.1", "pageres": "^4.1.2", "sass-media-mixins": "^1.0.0", "vinyl-buffer": "^1.0.0", "vinyl-source-stream": "^1.1.0" }, "directories": {}, "dist": { "shasum": "cccce2377ec95ce7edf5a2dba71063746c05995d", "tarball": "https://registry.npmjs.org/fontset/-/fontset-0.2.1.tgz" }, "gitHead": "d66d2d31a5e075f814abb77bbaa5582af7de3b10", "homepage": "http://hkvalvik.github.io/fontset/", "keywords": ["font", "fonts", "responsive", "sass", "scss", "semantic", "type", "typography"], "license": "MIT", "main": "gulpfile.js", "maintainers": [{ "name": "hkvalvik", "email": "hkvalvik@gmail.com" }], "name": "fontset", "optionalDependencies": {}, "readme": "ERROR: No README data found!", "repository": { "type": "git", "url": "git+https://github.com/hkvalvik/fontset.git" }, "scripts": {}, "version": "0.2.1" }, { "_args": [["sass-scale@git://github.com/hkvalvik/sass-scale.git", "/Users/administrator/Desktop/projects/hkvalvik"]], "_from": "git://github.com/hkvalvik/sass-scale.git", "_id": "sass-scale@1.1.0", "_inCache": true, "_installable": true, "_location": "/sass-scale", "_phantomChildren": {}, "_requested": { "hosted": { "directUrl": "https://raw.githubusercontent.com/hkvalvik/sass-scale/master/package.json", "gitUrl": "git://github.com/hkvalvik/sass-scale.git", "httpsUrl": "git+https://github.com/hkvalvik/sass-scale.git", "shortcut": "github:hkvalvik/sass-scale", "ssh": "git@github.com:hkvalvik/sass-scale.git", "sshUrl": "git+ssh://git@github.com/hkvalvik/sass-scale.git", "type": "github" }, "name": "sass-scale", "raw": "sass-scale@git://github.com/hkvalvik/sass-scale.git", "rawSpec": "git://github.com/hkvalvik/sass-scale.git", "scope": null, "spec": "git://github.com/hkvalvik/sass-scale.git", "type": "hosted" }, "_requiredBy": ["#DEV:/"], "_resolved": "git://github.com/hkvalvik/sass-scale.git#c89fc026dd2ab525c3ac3eb67c44720d9266d30d", "_shasum": "9640614384ae2e5ea5626ca2f0141bbc966fec49", "_shrinkwrap": null, "_spec": "sass-scale@git://github.com/hkvalvik/sass-scale.git", "_where": "/Users/administrator/Desktop/projects/hkvalvik", "author": "", "bugs": { "url": "https://github.com/hkvalvik/sass-scale/issues" }, "dependencies": {}, "description": "Responsive css properties", "devDependencies": { "fontset": "^0.1.1", "gulp": "^3.9.1", "gulp-compile-handlebars": "^0.6.1", "gulp-rename": "^1.2.2", "gulp-sass": "^2.2.0", "marked": "^0.3.5", "normalize-scss": "^5.0.1", "sass-media-mixins": "^1.0.0" }, "gitHead": "c89fc026dd2ab525c3ac3eb67c44720d9266d30d", "homepage": "http://hkvalvik.github.io/sass-scale/", "license": "MIT", "main": "gulpfile.js", "name": "sass-scale", "optionalDependencies": {}, "readme": "# Sass scale\n\nScale css properties responsively with a single `@include`.<br />\n[Documentation and examples](http://hkvalvik.github.io/sass-scale)\n\n## Usage\n\n    // Your settings\n\n    @import \"node_modules/sass-scale/index\";\n\n    body {\n\n      // A single property\n      @include scale(padding);\n\n      // Several properties\n      @include scale(top, left);\n\n      // Multiply rendered values by two\n      @include scale(2, border-width);\n\n      // Render negative values\n      @include scale(-1, margin-left, margin-right);\n    }\n\n## Settings\n\nAll media queries and values can be configured like this:\n\n    $scale-small: (\n            query:  '(max-width: 639px)',\n            top:    16px,\n            right:  12px,\n            bottom: 16px,\n            left:   12px);\n\n    $scale-medium: (\n            query:  '(min-width: 640px) and (max-width: 1279px)',\n            top:    24px,\n            right:  16px,\n            bottom: 24px,\n            left:   16px);\n\n    $scale-large: (\n            query:  '(min-width: 1280px)',\n            top:    32px,\n            right:  24px,\n            bottom: 32px,\n            left:   24px);\n\n    $scale-settings: $scale-small, $scale-medium, $scale-large;\n\n    @import \"node_modules/sass-scale/index\";\n\n## Example input / output\n\n### Scss\n\n    body {\n      @include scale(padding);\n    }\n\n### Css\n\n    @media (max-width: 639px) {\n      body { padding: 15px 10px 15px 10px }\n    }\n\n    @media (min-width: 640px) and (max-width: 1279px) {\n      body { padding: 25px 20px 25px 20px }\n    }\n\n    @media (min-width: 1280px) {\n      body { padding: 30px 25px 30px 25px }\n    }\n\n## Supported properties\n\n    padding\n    padding-top\n    padding-right\n    padding-bottom\n    padding-left\n\n    margin\n    margin-top\n    margin-right\n    margin-bottom\n    margin-left\n\n    border-width\n    border-top-width\n    border-right-width\n    border-bottom-width\n    border-left-width\n\n    top\n    right\n    bottom\n    left\n\n    width\n    height\n\n    min-width\n    min-height\n\n    max-width\n    max-height", "readmeFilename": "readme.md", "repository": { "type": "git", "url": "git+https://github.com/hkvalvik/sass-scale.git" }, "version": "1.1.0" }, { "_args": [["git://github.com/hkvalvik/sass-media-mixins.git", "/Users/administrator/Desktop/projects/hkvalvik"]], "_from": "git://github.com/hkvalvik/sass-media-mixins.git", "_id": "sass-media-mixins@1.0.0", "_inCache": true, "_installable": true, "_location": "/sass-media-mixins", "_phantomChildren": {}, "_requested": { "hosted": { "directUrl": "https://raw.githubusercontent.com/hkvalvik/sass-media-mixins/master/package.json", "gitUrl": "git://github.com/hkvalvik/sass-media-mixins.git", "httpsUrl": "git+https://github.com/hkvalvik/sass-media-mixins.git", "shortcut": "github:hkvalvik/sass-media-mixins", "ssh": "git@github.com:hkvalvik/sass-media-mixins.git", "sshUrl": "git+ssh://git@github.com/hkvalvik/sass-media-mixins.git", "type": "github" }, "name": null, "raw": "git://github.com/hkvalvik/sass-media-mixins.git", "rawSpec": "git://github.com/hkvalvik/sass-media-mixins.git", "scope": null, "spec": "git://github.com/hkvalvik/sass-media-mixins.git", "type": "hosted" }, "_requiredBy": ["#DEV:/"], "_resolved": "git://github.com/hkvalvik/sass-media-mixins.git#c6c6f0019677ba7bc6c1f785eaf2f81e1faaabbe", "_shasum": "62ba28090564e7a5b977cf029c5d4c264809f1ea", "_shrinkwrap": null, "_spec": "git://github.com/hkvalvik/sass-media-mixins.git", "_where": "/Users/administrator/Desktop/projects/hkvalvik", "author": "", "bugs": { "url": "https://github.com/hkvalvik/sass-media-mixins/issues" }, "dependencies": {}, "description": "Configurable media query mixins", "devDependencies": {}, "gitHead": "c6c6f0019677ba7bc6c1f785eaf2f81e1faaabbe", "homepage": "https://github.com/hkvalvik/sass-media-mixins#readme", "license": "MIT", "name": "sass-media-mixins", "optionalDependencies": {}, "readme": "# Sass media query mixins\n\n## Usage\n\n    // Media query breakpoints\n\n    $media-small-start: 0;\n    $media-medium-start: 640px;\n    $media-large-start: 1280px;\n\n    // Import\n\n    @import \"node_modules/sass-media-mixins/index\";\n\n    // Media query mixins\n\n    .my-selector {\n      @include media-small {}\n      @include media-medium {}\n      @include media-large {}\n      @include media-small-and-medium {}\n      @include media-medium-and-large {}\n    }", "readmeFilename": "readme.md", "repository": { "type": "git", "url": "git+https://github.com/hkvalvik/sass-media-mixins.git" }, "version": "1.0.0" }, { "_args": [["hamburger.js", "/Users/administrator/Desktop/projects/hkvalvik"]], "_from": "hamburger.js@*", "_id": "hamburger.js@0.9.2", "_inCache": true, "_installable": true, "_location": "/hamburger.js", "_nodeVersion": "5.5.0", "_npmOperationalInternal": { "host": "packages-16-east.internal.npmjs.com", "tmp": "tmp/hamburger.js-0.9.2.tgz_1466418051214_0.8216680819168687" }, "_npmUser": { "email": "hkvalvik@gmail.com", "name": "hkvalvik" }, "_npmVersion": "3.3.12", "_phantomChildren": {}, "_requested": { "name": "hamburger.js", "raw": "hamburger.js", "rawSpec": "", "scope": null, "spec": "*", "type": "range" }, "_requiredBy": ["#DEV:/"], "_shasum": "bfb17944d43f0d360cd367d7d58c79f342666d13", "_shrinkwrap": null, "_spec": "hamburger.js", "_where": "/Users/administrator/Desktop/projects/hkvalvik", "author": "", "bugs": { "url": "https://github.com/hkvalvik/hamburger.js/issues" }, "dependencies": {}, "description": "A css-only button that animates from a hamburger-icon to a cross-icon.", "devDependencies": { "gulp": "^3.9.1", "gulp-concat": "^2.6.0", "gulp-sass": "^2.3.2" }, "directories": {}, "dist": { "shasum": "bfb17944d43f0d360cd367d7d58c79f342666d13", "tarball": "https://registry.npmjs.org/hamburger.js/-/hamburger.js-0.9.2.tgz" }, "gitHead": "c19f6850c0a89e490cb1488eff15e6d1593cfac6", "homepage": "https://github.com/hkvalvik/hamburger.js", "license": "MIT", "main": "index.js", "maintainers": [{ "name": "hkvalvik", "email": "hkvalvik@gmail.com" }], "name": "hamburger.js", "optionalDependencies": {}, "readme": "ERROR: No README data found!", "repository": { "type": "git", "url": "git+https://github.com/hkvalvik/hamburger.js.git" }, "scripts": { "test": "echo \"Error: no test specified\" && exit 1" }, "version": "0.9.2" }], "gists": [{ "name": "Browser console snippets", "url": "https://gist.github.com/hkvalvik/83e25127ebf1e0c9803c4e07f9c0d7c0" }] };

},{}],2:[function(require,module,exports){
'use strict';

var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;

var isArray = function isArray(arr) {
	if (typeof Array.isArray === 'function') {
		return Array.isArray(arr);
	}

	return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) {/**/}

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

module.exports = function extend() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0],
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if (typeof target === 'boolean') {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {
		target = {};
	}

	for (; i < length; ++i) {
		options = arguments[i];
		// Only deal with non-null/undefined values
		if (options != null) {
			// Extend the base object
			for (name in options) {
				src = target[name];
				copy = options[name];

				// Prevent never-ending loop
				if (target !== copy) {
					// Recurse if we're merging plain objects or arrays
					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && isArray(src) ? src : [];
						} else {
							clone = src && isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						target[name] = extend(deep, clone, copy);

					// Don't bring in undefined values
					} else if (typeof copy !== 'undefined') {
						target[name] = copy;
					}
				}
			}
		}
	}

	// Return the modified object
	return target;
};


},{}],3:[function(require,module,exports){
window.Hamburger = function(element, options) {

    options = options || {};

    return {

        element: element,

        options: {
            toggleClass: options.toggleClass || 'hamburger--on'
        },

        _on: false,

        _supportsClassList: null,

        _init: function() {
            this._supportsClassList = this.element.classList && this.element.classList.add;
            this.element.addEventListener('click', this.toggle.bind(this));
            return this;
        },

        toggle: function() {
            this._on = !this._on;
            if(this._on) {
                this.on();
            }
            else {
                this.off();
            }
        },

        on: function(event) {
            this._supportsClassList && this.element.classList.add(this.options.toggleClass);
        },

        off: function(event) {
            this._supportsClassList && this.element.classList.remove(this.options.toggleClass);
        }

    }._init();
};
},{}],4:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
    function _class() {
        _classCallCheck(this, _class);

        if (window.location.hostname != 'localhost') {
            this._run();
        }
    }

    _createClass(_class, [{
        key: '_run',
        value: function _run() {
            console.log('Analytics');

            (function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments);
                }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

            ga('create', 'UA-81645575-1', 'auto');
            ga('send', 'pageview');
        }
    }]);

    return _class;
}();

},{}],5:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var extend = require('extend');
var data = require('../../dist/data');
require('hamburger.js');

module.exports = function () {
    _createClass(_class, null, [{
        key: '_defaults',
        get: function get() {
            return {
                activeClass: 'header--active',
                inactiveMainClass: 'main--inactive',
                repositoryTemplate: function repositoryTemplate(repository) {
                    return '\n                    <li>\n                        <a href="' + repository.homepage + '">\n                            <h4>\n                                ' + repository.name + '\n                            </h4>\n                        </a>\n                        <p>\n                            ' + repository.description + '\n                        </p>\n                    </li>\n                ';
                },
                gistTemplate: function gistTemplate(gist) {
                    return '\n                    <li>\n                        <a href="' + gist.url + '">\n                            <h4>\n                                ' + gist.name + '\n                            </h4>\n                        </a>\n                    </li>\n                ';
                },
                template: function template() {
                    return '\n                    <header class="header">\n                        <div class="header-content">\n                            <button class="hamburger header-toggle">\n                                <span class="hamburger-icon header-toggle-icon"></span>\n                                <span class="header-toggle-label">\n                                    Menu\n                                </span>\n                            </button>\n                            <div class="header-nav">\n                                <nav>\n                                    <h3>Repositories</h3>\n                                    <ul>\n                                        ' + data.repositories.map(this.options.repositoryTemplate).join('') + '\n                                    </ul>\n                                    <h3>Gists</h3>\n                                    <ul>\n                                        ' + data.gists.map(this.options.gistTemplate).join('') + '\n                                    </ul>\n                                </nav>\n                            </div>\n                        </div>\n                    </header>\n                ';
                }
            };
        }
    }]);

    function _class() {
        var element = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

        _classCallCheck(this, _class);

        this.options = extend(true, {}, this.constructor._defaults, options);
        this.element = element || this._createElement();
        var toggle = this.element.querySelector('.hamburger');
        new Hamburger(toggle);
        toggle.addEventListener('click', this._toggle.bind(this));
    }

    _createClass(_class, [{
        key: '_createElement',
        value: function _createElement() {
            var element = document.createElement('div');
            document.body.insertBefore(element, document.body.firstChild);
            element.innerHTML = this.options.template.call(this);
            return element.firstElementChild;
        }
    }, {
        key: '_toggle',
        value: function _toggle() {
            this.element.classList.toggle(this.options.activeClass);
            document.querySelector('main').classList.toggle(this.options.inactiveMainClass);
        }
    }]);

    return _class;
}();

},{"../../dist/data":1,"extend":2,"hamburger.js":3}],6:[function(require,module,exports){
'use strict';

var Header = require('./components/header');
var Analytics = require('./components/analytics');

var header = new Header();

var analytics = new Analytics();

function appendCss(url) {
    var head = document.head;
    var link = document.createElement('link');
    link.type = 'text/css';
    link.rel = 'stylesheet';
    link.href = url;
    head.appendChild(link);
}

appendCss('/dist/index.css');

},{"./components/analytics":4,"./components/header":5}]},{},[6])


//# sourceMappingURL=index.min.js.map
